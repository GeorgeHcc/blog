(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{355:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("一个框架的升级通常会伴随着一系列的优化，相比于 Vue2.x，Vue3.x 做了很多优化，了解 Vue3.x 具体做了哪些优化，了解 Vue3.x 的升级给开发带来的益处，并应用在自己的开发工作中，获得能力和技巧的提升！")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("文章来源于"),s("a",{attrs:{href:"https://baike.baidu.com/item/Vue.js%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95/63405688?fr=ge_ala",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Vue.js技术内幕》"),s("OutboundLink")],1),t._v("一书。博主在阅读后做了一些总结，感兴趣的可以去看原书")])]),t._v(" "),s("h2",{attrs:{id:"源码优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码优化"}},[t._v("#")]),t._v(" 源码优化")]),t._v(" "),s("p",[t._v("源码优化面向的是"),s("code",[t._v("Vue.js")]),t._v("框架的开发者，是为了让"),s("code",[t._v("Vue.js")]),t._v("框架的代码更易于开发和维护。源码的优化主要分为两个方面，一个是 "),s("code",[t._v("monorepo")]),t._v("，一个是"),s("code",[t._v("typescript")])]),t._v(" "),s("h3",{attrs:{id:"monorepo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monorepo"}},[t._v("#")]),t._v(" monorepo")]),t._v(" "),s("p",[t._v("Vue3.js 采用了"),s("code",[t._v("monorepo")]),t._v("的方式来管理整个项目，相较于 Vue2 的源码组织方式，"),s("code",[t._v("monorepo")]),t._v("把这些模块拆分到不同的包中，每个包都有自己的 API、类型定义和测试等。")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("monorepo")]),t._v("管理项目有以下优势")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("模块拆分的粒度更细，职责划分更加明确，模块之间的依赖关系更加明显，使得开发人员更容易阅读、理解和更改所有模块源码，提高代码的可维护性。")])]),t._v(" "),s("li",[s("p",[t._v("使得一些包（比如"),s("code",[t._v("reactivity")]),t._v("响应式库）可以独立于"),s("code",[t._v("Vue")]),t._v("使用，如果你只想使用 Vue 的响应式能力，只需要单独安装这个包即可，而不用安装整个 Vue，这无疑是减少引用包的体积。")])])]),t._v(" "),s("h3",{attrs:{id:"typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" Typescript")]),t._v(" "),s("p",[t._v("在 Vue1.x 之前，源码是没用使用类型语言的，尤大使用"),s("code",[t._v("JavaScript")]),t._v("开发了整个框架，但是对于复杂的项目开发，使用类型语言可以非常有利于代码的维护，它可以在编译期间帮你做类型检测，从而避免一些因为类型导致的错误。")]),t._v(" "),s("p",[t._v("因此，在 Vue2.x 的时候，尤选择了 Flow。但是由于 Flow 在一些复杂场景下对类型检测的支持不是很好，Vue 放弃了 Flow，在 Vue3.x 中使用 Typescript 重构了整个项目")]),t._v(" "),s("blockquote",[s("p",[t._v("Flow 是 FaceBook 公司出的 Javascript 静态类型检查工具，能以非常低的成本对已有代码进行嵌入，非常灵活")])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("笔记")]),t._v(" "),s("p",[t._v("总之，Typescript 提供了更好的类型检测，能支持复杂的类型推导。由于源码本身也是使用 TypeScript 编写就省去了单独维护"),s("code",[t._v("d.ts")]),t._v("文件的麻烦")])]),t._v(" "),s("h2",{attrs:{id:"性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),s("p",[t._v("性能优化对于一个前端工程师来说，应该是再熟悉不过的话题了。对于像 Vue2.x 这样优秀的项目来说，性能优化还有哪些方面可以突破呢？")]),t._v(" "),s("h3",{attrs:{id:"源码体积优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码体积优化"}},[t._v("#")]),t._v(" 源码体积优化")]),t._v(" "),s("p",[t._v("Vue3 中引入了"),s("code",[t._v("tree-shaking")]),t._v("技术，通过静态分析，在编译阶段就可以找到没有用到的模块，并打上标记，然后再压缩阶段就可以删除这些已标记的代码。")]),t._v(" "),s("h3",{attrs:{id:"数据劫持优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据劫持优化"}},[t._v("#")]),t._v(" 数据劫持优化")]),t._v(" "),s("p",[s("code",[t._v("Vue")]),t._v("区别于"),s("code",[t._v("React")]),t._v("的一大特色就是它的数据是响应式的。DOM 是数据的一种映射，在"),s("code",[t._v("Vue")]),t._v("中数据发生变化后可以自动更新 DOM，而用户只需要专注数据的修改，减少了使用者的心智负担。")]),t._v(" "),s("p",[t._v("而要实现这个功能就必须劫持数据的访问和更新,在数据发生变换后自动的去执行一些代码更新 DOM。\n就如"),s("a",{attrs:{href:"https://v2.cn.vuejs.org/v2/guide/reactivity.html#ad",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue2.x 官方文档"),s("OutboundLink")],1),t._v("给出的响应式实现思路：\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/GeorgeHcc/GeorgeHcc@main/assets/blog/vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.png",alt:""}})]),t._v(" "),s("p",[t._v("我们都知道，在"),s("code",[t._v("Vue3.x")]),t._v("之前内部是通过"),s("code",[t._v("Object.defineProperty")]),t._v("API 实现数据劫持的，如：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("但是这样做也有一些缺陷：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("它必须事先知道要拦截的"),s("code",[t._v("Key")]),t._v("是什么，所以并不能检测对象的增加和删除。虽然官方提供了"),s("code",[t._v("$get")]),t._v("和"),s("code",[t._v("$set")]),t._v("解决这个问题，但是这无疑还是增加了开发者的心智负担。")])]),t._v(" "),s("li",[s("p",[t._v("当对象的层级嵌套比较深的时候，vue 在运行时无法判断具体哪个属性被访问（也就是"),s("code",[t._v("<template>")]),t._v("模板中那个属性被用到）因此需要递归遍历 data 所有的属性,通过"),s("code",[t._v("Object.defineProperty")]),t._v("把每一层都变成响应式的。")])])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("d")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("为了解决这个问题Vue3.x使用"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy",target:"_blank",rel:"noopener noreferrer"}},[t._v("Proxy API"),s("OutboundLink")],1),t._v("劫持了整个对象，因为劫持的是整个对象，所以对于对象的增加和删除自然也就能检测到了。")]),t._v(" "),s("p",[t._v("但是Proxy并不能检测内部深层次的对象变化，Vue3.x的处理方式是通过在proxy处理器对象的getter中递归响应，只有在正真访问到的内部对象才会变成响应式的。因此，一定程度上提升了性能。")]),t._v(" "),s("h3",{attrs:{id:"编译优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译优化"}},[t._v("#")]),t._v(" 编译优化")]),t._v(" "),s("p",[t._v("在Vue2.x的diff算法中，是会遍历所有的节点的，这就意味着一些不会发生变化的节点也会参与遍历。例如：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{msg}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n...\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("这就导致vnode的更新性能与模板大小成正相关，而跟动态节点无关，无疑是性能浪费。Vue3.x为了解决这个问题在编译阶段做了优化，它通过对静态模板的分析，编译生成了Block Tree。")]),t._v(" "),s("p",[t._v("Block Tree是将模板基于动态节点指令切割的嵌套区块（这个我也不太懂😥）每个区块内部的节点结构是固定的，而且每个区块只需要以一个Array来追踪自身包含的动态节点。")]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("笔记")]),t._v(" "),s("p",[t._v("总结:Vue3.x在编译阶段做了以下优化")]),t._v(" "),s("ul",[s("li",[t._v("diff算法优化（通过静态标记给会发生变化的地方打上flag，在下次发生变化时直接从这里比较）")]),t._v(" "),s("li",[t._v("静态提升（对不参与更新的元素，会做静态提升，只会被创建一次）")]),t._v(" "),s("li",[t._v("事件监听缓存")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);